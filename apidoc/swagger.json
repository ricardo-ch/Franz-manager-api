{
  "swagger": "2.0",
  "info": {
    "description": "Documentation for franz-manager-api.",
    "version": "1.0.0",
    "title": "Franz-manager-api",
    "contact": {
      "name": "Anthony Sara√Øs",
      "email": "anthony.sarais@greencom-networks.com"
    }
  },
  "produces": [
    "text/plain",
    "application/json; charset=utf-8"
  ],
  "consumes": [
    "application/json; charset=utf-8"
  ],
  "host": "localhost",
  "basePath": "/franz-manager-api",
  "schemes": [
    "https"
  ],
  "paths": {
    "/topics": {
      "get": {
        "tags": [
          "topics"
        ],
        "summary": "/topics",
        "description": "Retrieves a list of topic.",
        "parameters": [
          {
            "name": "idOnly",
            "in": "query",
            "description": "return an array of object containing only topics id (example: [{id: 'SWS.events'},{id: 'IceCorp.requests.executed'}]).",
            "required": false,
            "default": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/responses/Topic"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "topics"
        ],
        "summary": "/topics",
        "description": "Create a topic.",
        "parameters": [
          {
            "$ref": "#/parameters/Topic"
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED"
          }
        }
      }
    },
    "/topics/{id}": {
      "get": {
        "tags": [
          "topics"
        ],
        "summary": "/topics/:id",
        "description": "Retrieves one topic.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Topic id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/responses/Topic"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/responses/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "topics"
        ],
        "summary": "/topics/:id",
        "description": "Delete a topic.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Topic id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/responses/Error"
            }
          }
        }
      }
    },
    "/topics/{id}/messages": {
      "get": {
        "tags": [
          "topics",
          "messages"
        ],
        "summary": "/topics/:id/messages",
        "description": "List topic message.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Topic id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Max messages to retrieve.",
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/responses/Topic"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/responses/Error"
            }
          }
        }
      }
    },
    "/brokers": {
      "get": {
        "tags": [
          "brokers"
        ],
        "summary": "/brokers",
        "description": "Retrieves a list of broker.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/responses/Broker"
              }
            }
          }
        }
      }
    },
    "/brokers/{id}": {
      "get": {
        "tags": [
          "brokers"
        ],
        "summary": "/brokers/:id",
        "description": "Retrieves one broker.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/responses/Broker"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "Topic": {
      "in": "body",
      "description": "Topic object.",
      "schema": {
        "title": "Topic",
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Topic name.",
            "required": true
          },
          "replications": {
            "type": "integer",
            "format": "int32",
            "description": "Number of replicas. Default value depends on broker configuration."
          },
          "partitions": {
            "type": "integer",
            "format": "int32",
            "description": "Number of partitions. Default value depends on broker configuration."
          },
          "configurations": {
            "$ref": "#/responses/Configurations"
          }
        }
      }
    }
  },
  "responses": {
    "Error": {
      "type": "object",
      "description": "An object containing error code and error description.",
      "required": [
        "message",
        "code"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Error code."
        }
      }
    },
    "Configurations": {
      "type": "object",
      "description": "Configurations is a map. Keys are string and values can be integer, boolean and string.",
      "properties": {
        "propertyKey": {
          "type": "string"
        }
      }
    },
    "Topic": {
      "type": "object",
      "description": "Topic object.",
      "required": [
        "id",
        "replications",
        "partitions",
        "configurations"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Topic name."
        },
        "replications": {
          "type": "integer",
          "format": "int32",
          "description": "Number of replicas."
        },
        "partitions": {
          "type": "integer",
          "format": "int32",
          "description": "Number of partitions."
        },
        "configurations": {
          "$ref": "#/responses/Configurations"
        }
      }
    },
    "Broker": {
      "type": "object",
      "description": "Broker object.",
      "required": [
        "id",
        "host",
        "port",
        "configurations"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Topic name."
        },
        "host": {
          "type": "string",
          "description": "Broker host."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Broker port."
        },
        "configurations": {
          "$ref": "#/responses/Configurations"
        }
      }
    }
  }
}